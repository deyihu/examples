/*!
 * maptalks.routeplayer v0.1.0
 * LICENSE : MIT
 * (c) 2016-2023 maptalks.org
 */
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).maptalks=t.maptalks||{},t.maptalks)}(this,(function(t,i){"use strict";function n(t){if(t&&t.i)return t;var i=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var s=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(i,n,s.get?s:{enumerable:!0,get:function(){return t[n]}})}})),i.default=t,Object.freeze(i)}var s=n(i);function e(t,i){for(var n=0;n<i.length;n++){var s=i[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(e=s.key,h=void 0,"symbol"==typeof(h=function(t,i){if("object"!=typeof t||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var s=n.call(t,i||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===i?String:Number)(t)}(e,"string"))?h:String(h)),s)}var e,h}function h(t,i){return(h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,i){return t.__proto__=i,t})(t,i)}var r=new s.Coordinate([0,0,0]),u=function(){function t(t){this.route=t,this.path=t.path}var i,n,h,u=t.prototype;return u.getCoordinates=function(t,i){if(t<this.getStart()||t>this.getEnd())return null;for(var n=null,e=null,h=0,u=this.path.length;h<u;h++)if(t<this.path[h][3]){n=h,e=this.path[h][4];break}null===n&&(n=this.path.length-1);var o=this.path[n-1],l=this.path[n],f=(t-o[3])/(l[3]-o[3]),a=o[0]+(l[0]-o[0])*f,c=o[1]+(l[1]-o[1])*f,v=o[2]+(l[2]-o[2])*f,d=i.getGLRes();r.x=a,r.y=c,r.z=v;var p=i.coordinateToPointAtRes(r,d);r.x=o[0],r.y=o[1],r.z=o[2];var y=i.coordinateToPointAtRes(r,d),b=s.Util.computeDegree(y.x,y.y,p.x,p.y);return{coordinate:new s.Coordinate(a,c,v),viewPoint:p,degree:b,index:n,payload:e}},u.getStart=function(){return this.path[0][3]},u.getEnd=function(){return this.path[this.getCount()-1][3]},u.getCount=function(){return this.path.length},i=t,(n=[{key:"markerSymbol",get:function(){return this.route.markerSymbol},set:function(t){this.route.markerSymbol=t,this.s&&this.s.marker&&this.s.marker.setSymbol(t)}},{key:"lineSymbol",get:function(){return this.route.lineSymbol},set:function(t){this.route.lineSymbol=t,this.s&&this.s.marker&&this.s.line.setSymbol(t)}},{key:"trailLineSymbol",get:function(){return this.route.trailLineSymbol},set:function(t){this.route.trailLineSymbol=t,this.s&&this.s.marker&&this.s.trailLine.setSymbol(t)}}])&&e(i.prototype,n),h&&e(i,h),Object.defineProperty(i,"prototype",{writable:!1}),t}(),o=function(t){var i,n;function e(i,n,e){var h;return h=t.call(this,e)||this,Array.isArray(i)||(i=[i]),h.id=s.Util.UID(),h.h=n,h.u(i),h}n=t,(i=e).prototype=Object.create(n.prototype),i.prototype.constructor=i,h(i,n);var r=e.prototype;return r.remove=function(){return this.markerLayer?(this.player.playState="finished",this.markerLayer.remove(),this.lineLayer.remove(),this.trailLineLayer.remove(),delete this.markerLayer,delete this.lineLayer,delete this.trailLineLayer,delete this.h,this):this},r.play=function(){return"running"===this.player.playState||(this.player.play(),this.fire("playstart")),this},r.pause=function(){return"paused"===this.player.playState||(this.player.pause(),this.fire("playpause")),this},r.cancel=function(){this.player.cancel(),this.played=0,this.trailLinePoints=[];var t=this.trailLineLayer.getGeometries()[0];return void 0!==t&&t.setCoordinates(this.trailLinePoints),this.o(),this.l({styles:{t:0}}),this.fire("playcancel"),this},r.finish=function(){if("finished"===this.player.playState)return this;var t=this.trailLineLayer.getGeometries()[0],i=this.routes[0].path.map((function(t){return[t[0],t[1]]}));return this.trailLinePoints=i,t.setCoordinates(this.trailLinePoints),this.player.finish(),this.l({styles:{t:1}}),this.fire("playfinish"),this},r.getStartTime=function(){return this.startTime||0},r.getEndTime=function(){return this.endTime||0},r.getCurrentTime=function(){return this.played?this.startTime+this.played:this.startTime},r.getRoutes=function(){return this.routes},r.setTime=function(t){return this.played=t-this.startTime,this.played<0&&(this.played=0),this.v(),this},r.getUnitTime=function(){return this.options.unitTime},r.setUnitTime=function(t){this.options.unitTime=+t,this.v()},r.getCurrentProperties=function(t){return t||(t=0),this.routes[t]&&this.routes[t].s?this.routes[t].s.marker.getProperties():null},r.getCurrentCoordinates=function(t){return t||(t=0),this.routes[t]&&this.routes[t].s?this.routes[t].s.marker.getCoordinates():null},r.getMarkerSymbol=function(t){return this.routes&&this.routes[t]?this.routes[t].markerSymbol:null},r.getMarker=function(t){return t||(t=0),this.routes[t]&&this.routes[t].s?this.routes[t].s.marker:null},r.setMarkerSymbol=function(t,i){return this.routes&&this.routes[t]&&(this.routes[t].markerSymbol=i),this},r.getLineSymbol=function(t){return this.routes&&this.routes[t]?this.routes[t].lineSymbol:null},r.setLineSymbol=function(t,i){return this.routes&&this.routes[t]&&(this.routes[t].lineSymbol=i),this},r.showRoute=function(){this.lineLayer.show()},r.showTrail=function(){this.trailLineLayer.show()},r.hideRoute=function(){this.lineLayer.hide()},r.hideTrail=function(){this.trailLineLayer.hide()},r.v=function(){var t=this.player&&"running"===this.player.playState;t&&this.player.finish(),this.o(),t&&this.player.play()},r.l=function(t){if(t.state&&"running"!==t.state.playState)"finished"===t.state.playState&&this.fire("playfinish");else{this.played=this.duration*t.styles.t;for(var i=0,n=this.routes.length;i<n;i++)this.p(this.routes[i],this.startTime+this.played);var s=this.m();if(s){var e=s.rotationX,h=s.rotationZ,r=s.coordinate;this.fire("playing",{rotationX:e,rotationZ:h,coordinate:r,time:this.played})}}},r.p=function(t,i){if(this.h){var n=t.getCoordinates(i,this.h);if(n){if(t.s||(t.s={}),t.s.marker){var e=t.s.marker.getProperties();e.altitude=n.coordinate.z,s.Util.extend(e,n.payload),t.s.marker.setProperties(e),t.s.marker.setCoordinates(n.coordinate)}else{var h=new s.Marker(n.coordinate,{symbol:t.markerSymbol||this.options.markerSymbol,properties:{altitude:[n.coordinate.z]}}).addTo(this.markerLayer);t.s.marker=h}if(!t.s.line){var r=t.path.map((function(t){return t[2]})),u=new s.LineString(t.path,{symbol:t.lineSymbol||this.options.lineSymbol,properties:{altitude:r}}).addTo(this.lineLayer);t.s.line=u}if(t.s.trailLine){var o=this.options.maxTrailLine;if(0!==o&&this.trailLinePoints.length>o)this.trailLinePoints.shift(),t.s.trailLine.getProperties().altitude.shift();if(this.trailLinePoints.push(n.coordinate),this.trailLinePoints.length>1)t.s.trailLine.setCoordinates(this.trailLinePoints),t.s.trailLine.getProperties().altitude.push(n.coordinate.z)}else{this.trailLinePoints=[n.coordinate];var l=new s.LineString([],{symbol:t.trailLineSymbol||this.options.trailLineSymbol,properties:{altitude:[n.coordinate.z]}}).addTo(this.trailLineLayer);t.s.trailLine=l}}else t.s&&t.s.marker&&(t.s.marker.remove(),delete t.s.marker)}},r.m=function(){if(this.trailLinePoints&&this.trailLinePoints.length>1){var t=this.trailLinePoints.length,i=this.trailLinePoints[t-1],n=this.trailLinePoints[t-2],e=this.h.getGLRes(),h=this.h.coordinateToPointAtRes(i,e),r=this.h.coordinateToPointAtRes(n,e),u=s.Util.computeDegree(h.x,h.y,r.x,r.y),o=this.h.altitudeToPoint(i.z,e),l=this.h.altitudeToPoint(n.z,e),f=s.Util.computeDegree(r.x,l,h.x,o),a=u/Math.PI*180,c=f/Math.PI*180;return i.x>=n.x?c=-c:c+=180,{rotationZ:a,rotationX:c,coordinate:i}}},r.u=function(t){for(var i=t.map((function(t){return new u(t)})),n=i[0].getStart(),s=i[0].getEnd(),e=1;e<i.length;e++){var h=i[e];h.getStart()<n&&(n=h.getStart()),h.getEnd()>s&&(s=h.getEnd())}this.trailLinePoints=[],this.routes=i,this.startTime=n,this.endTime=s,this.played=0,this.duration=s-n,this.g(),this.o()},r.o=function(){var t,i=(this.duration-this.played)/this.options.unitTime,n=this.h._getRenderer();n.callInFrameLoop&&(t=function(t){n.callInFrameLoop(t)}),this.player=s.animation.Animation.animate({t:[this.played/this.duration,1]},{framer:t,speed:i,easing:"linear"},this.l.bind(this))},r.g=function(){this.lineLayer=new s.VectorLayer(s.INTERNAL_LAYER_PREFIX+"_routeplay_r_"+this.id,[],{visible:this.options.showRoutes,enableSimplify:!1,enableAltitude:!0}).addTo(this.h),this.trailLineLayer=new s.VectorLayer(s.INTERNAL_LAYER_PREFIX+"_routeplay_t_"+this.id,[],{visible:this.options.showTrail,enableSimplify:!1,enableAltitude:!0}).addTo(this.h),this.markerLayer=new s.VectorLayer(s.INTERNAL_LAYER_PREFIX+"_routeplay_m_"+this.id,[],{enableAltitude:!0}).addTo(this.h)},e}(s.Eventable(s.Class));o.mergeOptions({unitTime:1e3,showRoutes:!0,showTrail:!0,maxTrailLine:0,markerSymbol:null,lineSymbol:{lineWidth:2,lineColor:"#004A8D"},trailLineSymbol:{lineColor:"rgba(250,0,0,1)",lineWidth:4,lineJoin:"round",lineCap:"round",lineDasharray:null,"lineOpacity ":1}}),t.Route=u,t.RoutePlayer=o,Object.defineProperty(t,"i",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.routeplayer v0.1.0")}));
